---

- name: Fetch stack user home directory
  delegate_to: undercloud_host
  shell: >
    echo -n $HOME
  register: echo_home

# yamllint disable rule:line-length
- name: Fetch overcloud node address
  delegate_to: undercloud_host
  shell: >
    source {{ echo_home.stdout }}/stackrc;
    nova list | grep 'ctlplane=' | grep 'controller' | awk -F'|' '{ print $7 }' | sed -e 's/\s*//'g | sed -e 's/ctlplane=//' | head -n1
  register: nova_list

- name: Gather configuration data on overcloud node
  delegate_to: undercloud_host
  command: >
    ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null heat-admin@{{ nova_list.stdout }}
      "sudo jq '.client.openstack.{{ item }}' {{ sensu_config_path }}/client.json | sed -e 's/\"*//'g"
  register: auth_data
  with_items:
    - username
    - tenant_name
    - password
    - region
    - auth_url

- name: Get the HA Proxy data on the overcloud node
  delegate_to: undercloud_host
  shell: >
    ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null heat-admin@{{ nova_list.stdout }} \
    "awk 'BEGIN {PRINT=0;}{if( \$2 == \"haproxy.stats\") {PRINT=1;} else if ( PRINT==1 ) {if (\$1 == \"bind\") URI=\$2; if (\$1 == \"mode\") MODE=\$2;if (\$1 == \"stats\" && \$2 == \"auth\") USER=\$3; if (\$1 == \"listen\" ) { exit }} }END{ print MODE\"://\"URI\"\n\"USER}' /etc/haproxy/haproxy.cfg"
  register: haproxy_data

# yamllint enable rule:line-length

- name: Set facts from result data
  set_fact: {'openstack_{{ item.item }}':'{{ item.stdout }}'}
  with_items:
    - '{{ auth_data.results }}'

- name: Update client configuration on monitoring host
  template:
    src: 'templates/client.json.j2'
    dest: '{{ sensu_config_path }}/client.json'
    owner: '{{ sensu_owner }}'
    group: '{{ sensu_group }}'
  notify:
    - restart sensu client service
