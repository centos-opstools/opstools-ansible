---
#Add the following configuration
# api.json -- it configures the sensu-api (server and client)
# redis.json -- it configures the use of redis for sensu as storage
# sensu_oscheck.json -- it configures the oschecks to be executed on the clients
#    sensu_oschecks.json.j2 is a template with severals templates that can be 
#    disabled and configured 
- name: configure sensu
  template:
   src: 'templates/{{ item }}.json.j2'
   dest: '{{sensu_config_path}}/{{ item }}.json'
   owner: '{{ sensu_owner }}'
   group: '{{ sensu_group }}'
  with_items:
      - api
      - redis
      - sensu_oschecks
  notify:
      - restart sensu

#This task is needed due to the fact that all the templates used to 
#create sensu_oschecks.json can be disabled. 
#All these templates end with a coma ','
#The last coma ',' needs to be deleted to not let sensu-server crash
- name: fix sensu_oschecks
  replace:
   dest: '{{sensu_config_path}}/sensu_oschecks.json'
   regexp: ",\n +}}"
   replace: "\n    }\n}"

#Include the rabbitmq plugin to be able to create a vhost
- name: Add plugin to manage rabbitmq
  rabbitmq_plugin:
   names: rabbitmq_management
   state: enabled

#It creates the vhost to be used
- name: Create sensu vhost on rabbitmq
  rabbitmq_vhost:
   name: '{{ sensu_rabbitmq_vhost }}'
   state: present
  notify:
      - restart rabbitmq

# Add user to server and assign full access control on / vhost.
# The user doesn't have permission rules for other vhosts
- name: Configure rabbitmq permissions
  rabbitmq_user:
    user: '{{ sensu_rabbitmq_user }}'
    password: '{{ sensu_rabbitmq_password }}'
    vhost: '{{ sensu_rabbitmq_vhost }}'
    configure_priv: '.*'
    read_priv: '.*'
    write_priv: '.*'
  notify:
      - restart rabbitmq

- name: ensure sensu is started and enabled at boot
  service:
   name: '{{ item }}'
   state: started
   enabled: yes
  with_items:
      - '{{ sensu_server_service_name }}'
      - '{{ sensu_api_service_name }}'
  when: manage_services|default(false)
