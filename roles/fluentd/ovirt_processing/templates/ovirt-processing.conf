#Add to all tag metrics the collectd plugin name

<match ovirt_collectd>
  @type rewrite_tag_filter
  rewriterule1 plugin ^(\w+\S+) ${tag}.$1
</match>

#Statsd Plugin
 
<match ovirt_collectd.statsd>
  @type rewrite_tag_filter
  rewriterule1 type_instance ^(\w+\S+) ${tag}.$1
</match>

<filter ovirt_collectd.statsd.vms.*.{nic,disk}.**>
  @type record_transformer
  enable_ruby
  <record>
    plugin_instance ${type_instance.split(".")[1]}
    type ${type_instance.split(".")[2]}_${type_instance.split(".")[4]}
    type_instance ${type_instance.split(".")[3]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

<filter ovirt_collectd.statsd.vms.*.{balloon,cpu}.**>
  @type record_transformer
  enable_ruby
  <record>
    plugin_instance ${type_instance.split(".")[1]}
    type ${type_instance.split(".")[2]}_${type_instance.split(".")[3]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
    remove_keys type_instance
</filter>

<filter ovirt_collectd.statsd.hosts.memory.**>
  @type record_transformer
  enable_ruby
  <record>
    type ${type_instance.split(".")[1]}
    type_instance ${type_instance.split(".")[2]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

<filter ovirt_collectd.statsd.hosts.{cpu,swap,vms,storage,vdsm}.**>
  @type record_transformer
  enable_ruby
  <record>
    type ${type_instance.split(".")[1]}
    type_instance ${type_instance.split(".")[2]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

<filter ovirt_collectd.statsd.hosts.elapsed_time>
  @type record_transformer
  enable_ruby
  <record>
    type ${type_instance.split(".")[1]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

<filter ovirt_collectd.statsd.hosts.{nic,disk}.**>
  @type record_transformer
  enable_ruby
  <record>
    type ${type_instance.split(".")[1]}_${type_instance.split(".")[3]}
    type_instance ${type_instance.split(".")[2]}
    entity ${type_instance.split(".")[0]}
    tag ${tag_parts[0]}.${tag_parts[1]}
  </record>
</filter>

#Process Plugin

<match ovirt_collectd.processes>
  @type rewrite_tag_filter
  rewriterule1 type ^(\w+\S+) ${tag}.$1
</match>

<filter ovirt_collectd.processes.ps_disk_**>
  @type record_transformer
  enable_ruby
  <record>
    values_read ${values[0]}
    values_write ${values[1]}
  </record>
  remove_keys values
</filter>

<filter ovirt_collectd.processes.ps_cputime>
  @type record_transformer
  enable_ruby
  <record>
    values_user ${values[0]}
    values_syst ${values[1]}
  </record>
  remove_keys values
</filter>

<filter ovirt_collectd.processes.ps_count>
  @type record_transformer
  enable_ruby
  <record>
    values_processes ${values[0]}
    values_threads ${values[1]}
  </record>
  remove_keys values
</filter>

<filter ovirt_collectd.processes.ps_pagefaults>
  @type record_transformer
  enable_ruby
  <record>
    values_minflt ${values[0]}
    values_majflt ${values[1]}
  </record>
  remove_keys values
</filter>

#Disk Plugin

<match ovirt_collectd.disk>
  @type rewrite_tag_filter
  rewriterule1 type ^(\w+\S+) ${tag}.$1
</match>

<filter ovirt_collectd.disk.disk_**>
  @type record_transformer
  enable_ruby
  <record>
    values_read ${values[0]}
    values_write ${values[1]}
  </record>
  remove_keys values
</filter>

#Netlink Plugin

<filter ovirt_collectd.netlink>
  @type record_transformer
  enable_ruby
  <record>
    values_rx ${values[0]}
    values_tx ${values[1]}
  </record>
  remove_keys values
</filter>

#Load Plugin

<filter ovirt_collectd.load>
  @type record_transformer
  enable_ruby
  <record>
    values_shortterm ${values[0]}
    values_midterm ${values[1]}
    values_longterm ${values[2]}
  </record>
  remove_keys values
</filter>

#virt Plugin

<match ovirt_collectd.virt>
  @type rewrite_tag_filter
  rewriterule1 type ^(\w+\S+) ${tag}.$1
</match>

<filter ovirt_collectd.virt.disk**>
  @type record_transformer
  enable_ruby
  <record>
    values_rx ${values[0]}
    values_tx ${values[1]}
  </record>
  remove_keys values
</filter>

<filter ovirt_collectd.virt.if**>
  @type record_transformer
  enable_ruby
  <record>
    values_read ${values[0]}
    values_write ${values[1]}
  </record>
  remove_keys values
</filter>

<filter ovirt_collectd.virt.**>
  @type record_transformer
  <record>
    source ovirt_collectd
    tag ${tag_parts[0]}.${tag_parts[1]}
    host_id {{ ovirt_vds_vds_id }}
    hostname "#{Socket.gethostname}"
    entity vms
  </record>
  remove_keys host
</filter>

<filter ovirt_collectd.{cpu,load,netlink,aggregation,swap,memory,nfs,df,entropy,disk.**,processes.**}>
  @type record_transformer
  enable_ruby
  <record>
    source ovirt_collectd
    tag ${tag_parts[0]}.${tag_parts[1]}
    host_id {{ ovirt_vds_vds_id }}
    hostname "#{Socket.gethostname}"
    entity hosts
  </record>
  remove_keys host
</filter>
