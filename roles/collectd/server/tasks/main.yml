---
- name: Install collectd
  package:
    name: '{{ collectd_package_name }}'
    state: present
  when: manage_packages|default(false)|bool

- name: Install collectd plugin packages
  package:
    name: '{{ item }}'
    state: present
  with_items: '{{ collectd_plugin_packages }}'
  when: manage_packages|default(false)|bool
  notify: restart collectd

- name: Purge collectd configuration file
  file:
    path: "{{ collectd_config_file }}"
    state: absent
  when: collectd_purge_config|default(false)|bool

- name: Ensure collectd configuration file exists
  template:
    src: collectd.conf.j2
    dest: "{{ collectd_config_file }}"
    owner: "{{ collectd_config_owner }}"
    group: "{{ collectd_config_group }}"
    mode: "{{ collectd_config_file_mode }}"

- name: Purge collectd configuration directory
  file:
    path: "{{ collectd_config_dir }}/"
    state: absent
  when: collectd_purge|default(false)|bool

- name: Ensure collectd configuration directory exists
  file:
    path: "{{ collectd_config_dir }}"
    state: directory
    owner: "{{ collectd_config_owner }}"
    group: "{{ collectd_config_group }}"
    mode: "{{ collectd_config_dir_mode }}"

- name: Generate write_graphite configuration
  template:
    src: 10-write-graphite.conf.j2
    dest: "{{ collectd_config_dir }}/10-write_graphite.conf"
  notify: restart collectd

- name: Generate collectd network server configuration
  template:
    src: 10-network-listen.conf.j2
    dest: "{{ collectd_config_dir }}/10-network-listen.conf"

- name: Generate collectd plugin configuration
  copy:
    dest: "{{ collectd_config_dir }}/{{item.key}}.conf"
    content: "{{ item.value }}"
  with_dict: "{{ collectd_plugin_config }}"

- name: Generate collectd credentials file
  template:
    src: collectd.auth.j2
    dest: "{{ collectd_auth_file }}"
    owner: "{{ collectd_config_owner }}"
    group: "{{ collectd_config_group }}"
    mode: "{{ collectd_auth_file_mode }}"

- name: Set collectd_tcp_network_connect
  seboolean:
    name: collectd_tcp_network_connect
    state: true
    persistent: true
  when: >
      ansible_selinux.status == "enabled" and
      ansible_selinux.mode in ["enforcing", "permissive"]

- name: Enable collectd service
  service:
    name: '{{ collectd_service_name }}'
    state: started
    enabled: true
  when: manage_services|default(false)|bool

- name: Create appropriate firewall rules
  include_role:
    name: firewall/commit
  vars:
    firewall_rules: collectd_hosts
